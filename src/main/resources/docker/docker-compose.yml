version: "3.8"

services:
  mysqldb:
    container_name: mysqldb
    image: mysql
    env_file: ./.env
    environment:
      MYSQL_USER: $MYSQLDB_USER
      MYSQL_PASSWORD: $MYSQLDB_PASSWORD
      MYSQL_DATABASE: $MYSQLDB_DATABASE
      MYSQL_ROOT_PASSWORD: $MYSQLDB_ROOT_PASSWORD
    ports:
      - 3307:3306
    volumes:
      - db:/var/lib/mysql
      - ./db/credit_infix.sql:/docker-entrypoint-initdb.d/credit_infix.sql
    networks:
      springboot-mysql-net:

  springbootapp:
    container_name: springbootapp
    build:
      context: ../../../../
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - 8089:8089
    depends_on:
      - mysqldb
    environment:
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE
      - spring.datasource.username=$MYSQLDB_USER
      - spring.datasource.password=$MYSQLDB_PASSWORD
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    networks:
      springboot-mysql-net:
#    restart: on-failure
  angularapp:
    image: tomcat:10.1.23
    container_name: angularapp
    ports:
      - 8080:8080
    volumes:
      - /home/rony/Rony/credit-infix-client/dist/:/usr/local/tomcat/webapps
    command: sh -c "cp -R /usr/local/tomcat/webapps.dist/. /usr/local/tomcat/webapps && catalina.sh run"
    networks:
      springboot-mysql-net:
volumes:
  db:
networks:
  springboot-mysql-net:
    name: springboot-mysql-net